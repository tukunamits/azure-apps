Implement the Terraform code
Create a directory in which to test the sample Terraform code and make it the current directory.

Create a file named providers.tf and insert the following code
-------------------------------------------------------------

terraform {
  required_version = ">=0.12"

  required_providers {
    azurerm = {
      source  = "hashicorp/azurerm"
      version = "~>2.0"
    }
    random = {
      source  = "hashicorp/random"
      version = "~>3.0"
    }
  }
}

provider "azurerm" {
  features {}
}
--------------------------------------------------------
Create a file named main.tf and insert the following code:
resource "random_pet" "rg_name" {
  prefix = var.resource_group_name_prefix
}

resource "azurerm_resource_group" "rg" {
  location = var.resource_group_location
  name     = random_pet.rg_name.id
}
-------------------------------------------------------
Create a file named variables.tf and insert the following code:
variable "resource_group_location" {
  default     = "eastus"
  description = "Location of the resource group."
}

variable "resource_group_name_prefix" {
  default     = "rg"
  description = "Prefix of the resource group name that's combined with a random ID so name is unique in your Azure subscription."
}
----------------------------------------------------
Create a file named outputs.tf and insert the following code:
output "resource_group_name" {
  value = azurerm_resource_group.rg.name
}
---------------------------------------------
Initialize Terraform
terraform init
Create a Terraform execution plan
terraform plan -out main.tfplan
Apply a Terraform execution plan
terraform apply main.tfplan

Verify the results
echo "$(terraform output resource_group_name)"
az group show --name <resource_group_name>
Clean up resources

terraform plan -destroy -out main.destroy.tfplan
terraform apply main.destroy.tfplan

